plugins {
    id "com.gradle.plugin-publish" version "0.15.0"
    id 'java-gradle-plugin'
    id 'groovy'
}
//
group = 'com.platformlib.gradle-wrapper'
version = project.findProperty('build.version') ?: '1.0-SNAPSHOT'

description "Gradle wrapper plugin to build gradle project in docker or on remote host"

repositories {
    mavenCentral()
}

dependencies {
    api group: 'com.platformlib', name: 'platformlib-os-local', version: project['platformlib-os.version']
    testImplementation gradleTestKit()
    testImplementation platform("org.junit:junit-bom:${project.'junit-jupiter.version'}")
    testImplementation "org.junit.jupiter:junit-jupiter-engine"
    testImplementation "org.junit.jupiter:junit-jupiter-params"
    testImplementation group: 'org.assertj', name: 'assertj-core', version: project['assertj.version']
}

gradlePlugin {
    plugins {
        gradleWrapperPlugin {
            id = 'com.platformlib.gradle-wrapper'
            implementationClass = 'com.platformlib.plugins.gradle.wrapper.PlatformLibGradleWrapperPlugin'
        }
        gradleContainerPlugin {
            id = 'com.platformlib.container'
            implementationClass = 'com.platformlib.plugins.gradle.container.PlatformLibGradleContainerPlugin'
        }
    }
}

pluginBundle {
    website = 'http://platformlib.com/'
    vcsUrl = 'https://github.com/platformlib/platformlib-gradle-wrapper-plugin'
    tags = ['docker', 'wrapper', 'gradle', 'build']
    plugins {
        gradleWrapperPlugin {
            displayName = 'Gradle wrapper build plugin'
            description = 'Build gradle project in docker or in remote host'
        }
    }
}

sourceSets {
  main {
    java { srcDirs = [] }    // no source dirs for the java compiler
    groovy { srcDirs = ["src/main/groovy", "src/main/java"] }  // compile   everything in src/ with groovy
  }
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

test {
    useJUnitPlatform()
}

apply plugin: 'maven-publish'
